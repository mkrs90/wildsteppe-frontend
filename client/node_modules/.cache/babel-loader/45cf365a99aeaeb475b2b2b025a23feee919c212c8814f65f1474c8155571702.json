{"ast":null,"code":"var _jsxFileName = \"/workspace/wildsteppe-frontend/client/src/components/starAverage.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { API_URL, COMMENT_ENDPOINT } from \"../services/auth.constants\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction StarAverage(_ref) {\n  _s();\n  let {\n    trailId\n  } = _ref;\n  const [reviews, setReviews] = useState([]);\n  useEffect(() => {\n    const getReviews = async () => {\n      let config = {\n        url: COMMENT_ENDPOINT,\n        baseURL: API_URL,\n        method: \"get\"\n      };\n      let response = await axios.request(config);\n      setReviews(response.data);\n    };\n    getReviews();\n  }, []);\n  let currentTrailReviews = reviews.filter(r => r.trail.id === trailId);\n  console.log(currentTrailReviews);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: reviews.filter(r => r.trail.id === trailId).map(reviews => /*#__PURE__*/_jsxDEV(GetAverage, {\n        review: reviews\n      }, reviews.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n_s(StarAverage, \"FPrwLLWcZBXrtWYcIRYMKBd2Ocw=\");\n_c = StarAverage;\nexport default StarAverage;\n\n// const GetAverage = ({ reviews }) => {\n\n//         // console.log(reviews)\n\n//         // const totalTrailReviews = reviews.length;\n//         // let zz = [];\n//         // const averageFiveStarRating = totalTrailReviews?.map((review) => zz.push(review.stars));\n//         // const averageRating = Math.round(averageFiveStarRating * totalTrailReviews) / totalTrailReviews;\n\n//         const createStars = (sr) => {\n//             const stars = [];\n//             for (let i = 0; i < sr; i++) {\n//                 stars.push(<i className=\"fa fa-solid fa-star\" id=\"rating_star\"></i>)\n//             }\n//             return stars;\n//         };\n\n//   return (\n//     <div className=\"row\">\n//       <div id=\"rating_stars\" className=\"ms-3\">\n//         {createStars(averageRating)}\n//       </div>\n//     </div>\n//   );\n// };\nvar _c;\n$RefreshReg$(_c, \"StarAverage\");","map":{"version":3,"names":["useState","useEffect","axios","API_URL","COMMENT_ENDPOINT","jsxDEV","_jsxDEV","StarAverage","_ref","_s","trailId","reviews","setReviews","getReviews","config","url","baseURL","method","response","request","data","currentTrailReviews","filter","r","trail","id","console","log","children","map","GetAverage","review","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/workspace/wildsteppe-frontend/client/src/components/starAverage.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { API_URL, COMMENT_ENDPOINT } from \"../services/auth.constants\";\n\nfunction StarAverage({ trailId }) {\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    const getReviews = async () => {\n      let config = {\n        url: COMMENT_ENDPOINT,\n        baseURL: API_URL,\n        method: \"get\",\n      };\n      let response = await axios.request(config);\n      setReviews(response.data);\n    };\n    getReviews();\n  }, []);\n\n  let currentTrailReviews = reviews.filter((r) => r.trail.id === trailId);\n  console.log(currentTrailReviews)\n\n  return (\n    <div>\n      <div>\n        {reviews\n          .filter((r) => r.trail.id === trailId)\n          .map((reviews) => (\n            <GetAverage key={reviews.id} review={reviews} />\n          ))}\n      </div>\n    </div>\n  );\n}\n\nexport default StarAverage;\n\n// const GetAverage = ({ reviews }) => {\n\n//         // console.log(reviews)\n\n//         // const totalTrailReviews = reviews.length;\n//         // let zz = [];\n//         // const averageFiveStarRating = totalTrailReviews?.map((review) => zz.push(review.stars));\n//         // const averageRating = Math.round(averageFiveStarRating * totalTrailReviews) / totalTrailReviews;\n    \n//         const createStars = (sr) => {\n//             const stars = [];\n//             for (let i = 0; i < sr; i++) {\n//                 stars.push(<i className=\"fa fa-solid fa-star\" id=\"rating_star\"></i>)\n//             }\n//             return stars;\n//         };\n\n//   return (\n//     <div className=\"row\">\n//       <div id=\"rating_stars\" className=\"ms-3\">\n//         {createStars(averageRating)}\n//       </div>\n//     </div>\n//   );\n// };\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,OAAO,EAAEC,gBAAgB,QAAQ,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvE,SAASC,WAAWA,CAAAC,IAAA,EAAc;EAAAC,EAAA;EAAA,IAAb;IAAEC;EAAQ,CAAC,GAAAF,IAAA;EAC9B,MAAM,CAACG,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAE1CC,SAAS,CAAC,MAAM;IACd,MAAMY,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7B,IAAIC,MAAM,GAAG;QACXC,GAAG,EAAEX,gBAAgB;QACrBY,OAAO,EAAEb,OAAO;QAChBc,MAAM,EAAE;MACV,CAAC;MACD,IAAIC,QAAQ,GAAG,MAAMhB,KAAK,CAACiB,OAAO,CAACL,MAAM,CAAC;MAC1CF,UAAU,CAACM,QAAQ,CAACE,IAAI,CAAC;IAC3B,CAAC;IACDP,UAAU,EAAE;EACd,CAAC,EAAE,EAAE,CAAC;EAEN,IAAIQ,mBAAmB,GAAGV,OAAO,CAACW,MAAM,CAAEC,CAAC,IAAKA,CAAC,CAACC,KAAK,CAACC,EAAE,KAAKf,OAAO,CAAC;EACvEgB,OAAO,CAACC,GAAG,CAACN,mBAAmB,CAAC;EAEhC,oBACEf,OAAA;IAAAsB,QAAA,eACEtB,OAAA;MAAAsB,QAAA,EACGjB,OAAO,CACLW,MAAM,CAAEC,CAAC,IAAKA,CAAC,CAACC,KAAK,CAACC,EAAE,KAAKf,OAAO,CAAC,CACrCmB,GAAG,CAAElB,OAAO,iBACXL,OAAA,CAACwB,UAAU;QAAkBC,MAAM,EAAEpB;MAAQ,GAA5BA,OAAO,CAACc,EAAE;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAC5B;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACF;AAEV;AAAC1B,EAAA,CA9BQF,WAAW;AAAA6B,EAAA,GAAX7B,WAAW;AAgCpB,eAAeA,WAAW;;AAE1B;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}