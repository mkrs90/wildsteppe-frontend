{"ast":null,"code":"// import React, { useState } from \"react\"\n// import AuthService from \"../../services/auth.service\";\n// import { useNavigate } from 'react-router-dom';\n// import { useGlobalState } from \"../../context/GlobalState\";\n// import jwtDecode from \"jwt-decode\";\n\n// const Login = () => {\n//   let navigate = useNavigate();\n\n//   const [ state, dispatch ] = useGlobalState();\n\n//   const [username, setUsername] = useState(\"\");\n//   const [password, setPassword] = useState(\"\");\n\n//   const handleLogin = (e) => {\n//     e.preventDefault();\n\n//     AuthService\n//       .login(username, password)\n//       .then(async (resp) => {\n//         let data = jwtDecode(resp.access)\n//         await dispatch({\n//           currentUserToken: resp.access,\n//           currentUser: data\n//         })\n//         navigate('/profile')\n//       });\n//   }\n\n//   return (\n//     <div className=\"c-form\">\n//       <form onSubmit={handleLogin}>\n//         <div>\n//           <label htmlFor=\"username\">Username:</label>\n//           <input\n//             type=\"text\"\n//             id=\"username\"\n//             name=\"username\"\n//             onChange={(e) => setUsername(e.target.value)}\n//             required\n//           />\n//         </div>\n//         <div>\n//           <label htmlFor=\"pass\">Password</label>\n//           <input\n//             type=\"password\"\n//             id=\"pass\"\n//             name=\"password\"\n//             minLength=\"8\"\n//             required\n//             onChange={(e) => setPassword(e.target.value)}\n//           />\n//         </div>\n//         <input\n//           type=\"submit\"\n//           value=\"Sign in\"\n//         />\n//       </form>\n//     </div>\n//   )\n\n// }\n\n// export default Login","map":{"version":3,"names":[],"sources":["/workspace/wildsteppe-frontend/client/src/components/user/Login.js"],"sourcesContent":["// import React, { useState } from \"react\"\n// import AuthService from \"../../services/auth.service\";\n// import { useNavigate } from 'react-router-dom';\n// import { useGlobalState } from \"../../context/GlobalState\";\n// import jwtDecode from \"jwt-decode\";\n\n// const Login = () => {\n//   let navigate = useNavigate();\n\n//   const [ state, dispatch ] = useGlobalState();\n\n//   const [username, setUsername] = useState(\"\");\n//   const [password, setPassword] = useState(\"\");\n\n//   const handleLogin = (e) => {\n//     e.preventDefault();\n\n//     AuthService\n//       .login(username, password)\n//       .then(async (resp) => {\n//         let data = jwtDecode(resp.access)\n//         await dispatch({\n//           currentUserToken: resp.access,\n//           currentUser: data\n//         })\n//         navigate('/profile')\n//       });\n//   }\n\n//   return (\n//     <div className=\"c-form\">\n//       <form onSubmit={handleLogin}>\n//         <div>\n//           <label htmlFor=\"username\">Username:</label>\n//           <input\n//             type=\"text\"\n//             id=\"username\"\n//             name=\"username\"\n//             onChange={(e) => setUsername(e.target.value)}\n//             required\n//           />\n//         </div>\n//         <div>\n//           <label htmlFor=\"pass\">Password</label>\n//           <input\n//             type=\"password\"\n//             id=\"pass\"\n//             name=\"password\"\n//             minLength=\"8\"\n//             required\n//             onChange={(e) => setPassword(e.target.value)}\n//           />\n//         </div>\n//         <input\n//           type=\"submit\"\n//           value=\"Sign in\"\n//         />\n//       </form>\n//     </div>\n//   )\n\n// }\n\n// export default Login"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}